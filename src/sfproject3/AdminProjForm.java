/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sfproject3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author thash
 */
public class AdminProjForm extends javax.swing.JFrame {

    /**
     * Creates new form AdminProjForm
     */
    public AdminProjForm() {
        initComponents();
        try{
            //open the connection
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb?useSSL=false", "root", "root@123");
            //here mydb is database name
            //root is username of mysql
            //root@123 is password
            // JOptionPane.showMessageDialog(null, "Database connection successful"); 
            String sqlProjects = "Select Project_ID, Project_Title, Description, Group_Project, No_of_members, Module, Available, Start_Date, Due_Date from projects ";
            PreparedStatement pstProjects = con.prepareStatement(sqlProjects);
            ResultSet rsProjects = pstProjects.executeQuery(sqlProjects);
            con.close();
            }
            catch(Exception e){
            System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null, "Error in connecting to database");
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tblProj = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtTitleProj = new javax.swing.JTextField();
        chkGroup = new javax.swing.JCheckBox();
        spnNumMembers = new javax.swing.JSpinner();
        txtModName = new javax.swing.JTextField();
        chkAvailableProj = new javax.swing.JCheckBox();
        txtStartDateProj = new javax.swing.JTextField();
        txtDueDateProj = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDescriptionProj = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnGoback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project_ID", "Project_Title", "Description", "Group_Project", "No. of members", "Module", "Available", "Start_Date", "Due_Date"
            }
        ));
        tblProj.setViewportView(jTable1);

        jPanel1.add(tblProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 1000, 640));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnInsert.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel2.add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 550, -1, -1));

        btnDelete.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 550, -1, -1));

        txtTitleProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitleProjActionPerformed(evt);
            }
        });
        jPanel2.add(txtTitleProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 170, -1));

        chkGroup.setText("Groups");
        chkGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGroupActionPerformed(evt);
            }
        });
        jPanel2.add(chkGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        spnNumMembers.setModel(new javax.swing.SpinnerNumberModel(1, 1, 70, 1));
        jPanel2.add(spnNumMembers, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, -1, -1));
        jPanel2.add(txtModName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 150, -1));

        chkAvailableProj.setText("Available");
        jPanel2.add(chkAvailableProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, -1, -1));

        txtStartDateProj.setText("YYYY-MM-DD");
        jPanel2.add(txtStartDateProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 150, -1));

        txtDueDateProj.setText("YYYY-MM-DD");
        jPanel2.add(txtDueDateProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 150, -1));

        jLabel1.setText("Project Title");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        jLabel2.setText("Project Description");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel3.setText("Is it a group project?");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel4.setText("If so how many members per group");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabel5.setText("Module Code");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        jLabel6.setText("Is the project available?");
        jLabel6.setToolTipText("");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jLabel7.setText("When will the project start?");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        jLabel8.setText("When is it due?");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, -1, -1));
        jPanel2.add(txtDescriptionProj, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 170, 110));

        btnClear.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 310, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 370, 640));

        btnGoback.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        btnGoback.setText("<<Go Back");
        btnGoback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGobackActionPerformed(evt);
            }
        });
        jPanel1.add(btnGoback, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 735, 110, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1469, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTitleProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitleProjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitleProjActionPerformed

    private void chkGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkGroupActionPerformed

    private void btnGobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGobackActionPerformed
        // TODO add your handling code here:
        //go back to adminHomePage(un)
        this.toBack();
        setVisible(false);
        new AdminProjForm().toFront();
        new AdminProjForm().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_btnGobackActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        // Code to load new data into  table
        //Accounting for Blanks
        if (txtTitleProj.getText().equals("")||txtDescriptionProj.getText().equals("")||txtModName.getText().equals("")||txtStartDateProj.getText().equals("")||txtDueDateProj.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Some fields empty.");
        }
        //All fields filled
        else{
            String Title = txtTitleProj.getText();
            String Des = txtDescriptionProj.getText();
            Boolean GroupChecking = false;
            int NumMem = 1;
            Boolean AvailableChecking = false;
            
            if (chkGroup.isSelected()){
            GroupChecking = true;
            NumMem = (Integer)(spnNumMembers.getValue()); 
            }
            String MODCode = txtModName.getText();
            if (chkAvailableProj.isSelected()){
            AvailableChecking = true;
            }
            String StartDate = txtStartDateProj.getText();
            String DueDate = txtDueDateProj.getText();
            
            try{
            //open the connection
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb?useSSL=false", "root", "root@123");
            //here mydb is database name
            //root is username of mysql
            //root@123 is password
           // JOptionPane.showMessageDialog(null, "Database connection successful"); 
            
            String sql = "INSERT into projects (Project_Title, Description, Group_Project, No_of_members, Module, Available, Start_Date, Due_Date) values (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstmt = con.prepareStatement(sql);
            
            pstmt.setString(1, Title);
            pstmt.setString(2, Des);
            pstmt.setBoolean(3, GroupChecking);
            pstmt.setInt(4, NumMem);
            pstmt.setString(5, MODCode);
            pstmt.setBoolean(6,AvailableChecking);
            pstmt.setString(7, StartDate);
            pstmt.setString(8, DueDate);
            
            int Count = pstmt.executeUpdate();
            if (Count != 0){
            JOptionPane.showMessageDialog(null, "Data successfully added");
            String sqlProjects = "Select Project_ID, Project_Title, Description, Group_Project, No_of_members, Module, Available, Start_Date, Due_Date from projects ";
            PreparedStatement pstProjects = con.prepareStatement(sqlProjects);
            ResultSet rsProjects = pstProjects.executeQuery(sqlProjects);
            }
            else {JOptionPane.showMessageDialog(null, "Data not added");}
            con.close();
            }
            catch(Exception e){
            System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null, "Error in connecting to database");
            }
        }
        
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtTitleProj.setText("");
        txtDescriptionProj.setText("");
        chkGroup.setSelected(false);
        spnNumMembers.setValue(1);
        txtModName.setText("");
        chkAvailableProj.setSelected(false);
        txtStartDateProj.setText("YYYY-MM-DD");
        txtDueDateProj.setText("YYYY-MM-DD");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int Proj_ID = (Integer.parseInt(JOptionPane.showInputDialog("Input the Project_ID of the record you want to update:")));
         try{
            //open the connection
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb?useSSL=false", "root", "root@123");
            //here mydb is database name
            //root is username of mysql
            //root@123 is password
           // JOptionPane.showMessageDialog(null, "Database connection successful"); 
            
            String sql = "UPDATE projects Project_Title = ?, Description= ?, Group_Project= ?, No_of_members= ?, Module= ?, Available= ?, Start_Date= ?, Due_Date= ? WHERE Project_ID = ?";
            
            PreparedStatement pstmt = con.prepareStatement(sql);
            
            String Title = txtTitleProj.getText();
            String Des = txtDescriptionProj.getText();
            Boolean GroupChecking = false;
            int NumMem = 1;
            Boolean AvailableChecking = false;
            
            if (chkGroup.isSelected()){
            GroupChecking = true;
            NumMem = (Integer)(spnNumMembers.getValue()); 
            }
            String MODCode = txtModName.getText();
            if (chkAvailableProj.isSelected()){
            AvailableChecking = true;
            }
            String StartDate = txtStartDateProj.getText();
            String DueDate = txtDueDateProj.getText();
            
            pstmt.setString(1, Title);
            pstmt.setString(2, Des);
            pstmt.setBoolean(3, GroupChecking);
            pstmt.setInt(4, NumMem);
            pstmt.setString(5, MODCode);
            pstmt.setBoolean(6,AvailableChecking);
            pstmt.setString(7, StartDate);
            pstmt.setString(8, DueDate);
            pstmt.setInt(9, Proj_ID);
            
            int Count = pstmt.executeUpdate();
            if (Count != 0){
            JOptionPane.showMessageDialog(null, "Data Updated successfully");
            String sqlProjects = "Select Project_ID, Project_Title, Description, Group_Project, No_of_members, Module, Available, Start_Date, Due_Date from projects ";
            PreparedStatement pstProjects = con.prepareStatement(sqlProjects);
            ResultSet rsProjects = pstProjects.executeQuery(sqlProjects);
            }
            else {JOptionPane.showMessageDialog(null, "Data not updated");}
            con.close();
            }
         catch(Exception e){
            System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null, "Error in connecting to database");
            }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         int Proj_ID = (Integer.parseInt(JOptionPane.showInputDialog("Input the Project_ID of the record you want to update:")));
         try{
            //open the connection
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb?useSSL=false", "root", "root@123");
            //here mydb is database name
            //root is username of mysql
            //root@123 is password
           // JOptionPane.showMessageDialog(null, "Database connection successful"); 
            
            String sql = "Delete from projects WHERE Project_ID = ?";
            
            PreparedStatement pstmt = con.prepareStatement(sql);
            
            pstmt.setInt(1, Proj_ID);
            
            int Count = pstmt.executeUpdate();
            if (Count != 0){
            JOptionPane.showMessageDialog(null, "Data Deleted successfully");
            String sqlProjects = "Select Project_ID, Project_Title, Description, Group_Project, No_of_members, Module, Available, Start_Date, Due_Date from projects ";
            PreparedStatement pstProjects = con.prepareStatement(sqlProjects);
            ResultSet rsProjects = pstProjects.executeQuery(sqlProjects);
            }
            else {JOptionPane.showMessageDialog(null, "Data not deleted");}
            con.close();
            }
         catch(Exception e){
            System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null, "Error in connecting to database");
            }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminProjForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminProjForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminProjForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminProjForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminProjForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGoback;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkAvailableProj;
    private javax.swing.JCheckBox chkGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner spnNumMembers;
    private javax.swing.JScrollPane tblProj;
    private javax.swing.JTextField txtDescriptionProj;
    private javax.swing.JTextField txtDueDateProj;
    private javax.swing.JTextField txtModName;
    private javax.swing.JTextField txtStartDateProj;
    private javax.swing.JTextField txtTitleProj;
    // End of variables declaration//GEN-END:variables
}
